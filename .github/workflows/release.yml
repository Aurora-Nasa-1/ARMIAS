name: Upload Release Assets

on:
  release:
    types: [created]

jobs:
  upload_release_assets:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create empty folders
      run: |
           mkdir -p files/modules/
           mkdir -p files/patches/
           mkdir -p files/patches/apks
           mkdir -p files/patches/modules
           mkdir -p files/patches/sdcard
           mkdir -p files/patches/data
           mkdir -p settings/
      

    - name: Action 7z
      uses: edgarrc/action-7z@v1.0.5
    - name: Get current time
      run: |
          CURRENT_TIME=$(date +"%Y%m%d")
          echo "$CURRENT_TIME" > current_time.txt 

    - name: Get latest tag
      id: latest-tag
      run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "$LATEST_TAG" > latest_tag.txt
              
    - name: Compress repository for each language version
      run: |
          LATEST_TAG=$(cat latest_tag.txt)
          CURRENT_TIME=$(cat current_time.txt)
          languages=("en" "jp" "zh")
          . ./languages.ini
          for lang in "${languages[@]}"; do
            find languages -maxdepth 1 -mindepth 1 -type d ! -name "$lang" -exec rm -rf {} +
            rm -f README.md README_*.md
            if [ -d "languages/$lang" ]; then
              cp "languages/$lang"/* .
              cp "languages/$lang"/custom_script.sh ./settings/
              cp "languages/$lang"/settings.ini ./settings/settings.sh
              rm -rf ./custom_script.sh
              rm -rf ./settings.ini
              rm -rf "languages/$lang"/*
              rmdir "languages/$lang" 
              rmdir languages
              eval "lang_${lang}"
              echo "id=AuroraNasa_Installer" > module.prop
              echo "name=${MODULE_NAME}" >> module.prop
              echo "version=${LATEST_TAG}" >> module.prop
              echo "versionCode=${CURRENT_TIME}" >> module.prop
              echo "author=AuroraNasa" >> module.prop
              echo "description=${MODULE_DES}" >> module.prop
              cat module.prop
            fi
            7z a -r -mx9 "ARMIAS_${LATEST_TAG}_${lang}.zip" * -x!*.git* -x!*.md -x!*.zip -x!latest_tag.txt -x!current_time.txt
            git checkout -- languages
          done
    - name: Upload Release Assets
      run: |
          # Find all ZIP files in the specified directory
          zip_files=$(find ./ -name '*.zip')
  
          # Loop through each ZIP file and upload it as a release asset
          for zip_file in $zip_files; do
            echo "Uploading $zip_file as a release asset..."
            curl -X POST "${{ github.event.release.upload_url }}" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/zip" \
              --data-binary @"$zip_file" \
              --output upload.txt
          done
    env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}